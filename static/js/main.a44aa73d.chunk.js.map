{"version":3,"sources":["serviceWorker.js","pages/NavBar.js","pages/HomePage.js","pages/FieldContainer.js","pages/ButtonContainer.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","NavBar","MenuList","style","padding","name","path","component","exact","map","prop","key","to","textDecoration","color","MenuItem","background","borderBottom","ListItemText","primary","HomePage","display","width","alignItems","flexDirection","noValidate","autoComplete","Grid","container","direction","spacing","item","sm","TextField","label","id","type","InputLabelProps","shrink","TextareaAutosize","rowsMin","rowsMax","placeholder","FieldContainer","FormControlLabel","control","Checkbox","FormControl","InputLabel","htmlFor","Select","native","inputProps","aria-label","value","Chip","useStyles","makeStyles","theme","buttonContainer","borderRadius","marginRight","ButtonContainer","classes","Box","className","m","Button","size","variant","root","drawer","flexShrink","drawerPaper","content","flexGrow","App","CssBaseline","Drawer","paper","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a44aa73d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { MenuList, MenuItem, ListItemText } from \"@material-ui/core\";\n\nconst NavBar = () => {\n  const menuItems = [\n    {\n      name: \"General Settings\",\n      path: \"/\",\n      component: \"HomePage\",\n      exact: true,\n    },\n    {\n      name: \"Edit Fields\",\n      path: \"/goal-setting\",\n      component: \"FieldContainer\",\n      exact: false,\n    },\n  ];\n\n  return (\n    <>\n      <MenuList style={{ padding: 0 }}>\n        {menuItems.map((prop, key) => {\n          return (\n            <NavLink\n              to={prop.path}\n              key={key}\n              style={{ textDecoration: \"none\", color: \"white\" }}\n            >\n              <MenuItem\n                style={{\n                  background: \"rgba(0,0,0,0.8)\",\n                  borderBottom: \"1px solid white\",\n                }}\n              >\n                <ListItemText primary={prop.name} />\n              </MenuItem>\n            </NavLink>\n          );\n        })}\n      </MenuList>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Grid, TextField, TextareaAutosize } from \"@material-ui/core\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          alignItems: \"stretch\",\n          flexDirection: \"column\",\n          padding: \"24px\",\n        }}\n      >\n        <form noValidate autoComplete=\"off\">\n          <Grid container direction=\"row\" spacing={3}>\n            <Grid item sm={4}>\n              <TextField label=\"Name\" style={{ display: \"flex\" }}></TextField>\n            </Grid>\n            <Grid item sm={4}>\n              <TextField\n                label=\"Start Date\"\n                style={{ display: \"flex\" }}\n                id=\"start-date\"\n                type=\"date\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              ></TextField>\n            </Grid>\n            <Grid item sm={4}>\n              <TextField\n                label=\"End Date\"\n                style={{ display: \"flex\" }}\n                id=\"end-date\"\n                type=\"date\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              ></TextField>\n            </Grid>\n            <Grid item sm={12}>\n              <TextareaAutosize\n                style={{ width: \"100%\" }}\n                rowsMin={4}\n                rowsMax={4}\n                placeholder=\"Instructions\"\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport {\n  Grid,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  FormControl,\n  InputLabel,\n  Select,\n  Chip,\n} from \"@material-ui/core\";\n\nconst FieldContainer = () => {\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          alignItems: \"stretch\",\n          flexDirection: \"column\",\n          padding: \"24px\",\n        }}\n      >\n        <form noValidate autoComplete=\"off\">\n          <Grid container direction=\"row\" spacing={3}>\n            <Grid item sm={4}>\n              <TextField label=\"Label\" style={{ display: \"flex\" }}></TextField>\n            </Grid>\n            <Grid item sm={4}>\n              <TextField\n                label=\"Field Id\"\n                style={{ display: \"flex\" }}\n              ></TextField>\n            </Grid>\n            <Grid item sm={4}>\n              <FormControlLabel\n                control={<Checkbox name=\"required\" color=\"primary\" />}\n                label=\"Required Field\"\n                style={{ display: \"flex\" }}\n              />\n            </Grid>\n            <Grid item sm={4}>\n              <FormControl style={{ display: \"flex\" }}>\n                <InputLabel htmlFor=\"field-type\">Field Type</InputLabel>\n                <Select native inputProps={{ name: \"field\", id: \"field-type\" }}>\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value={1}>One</option>\n                  <option value={2}>Two</option>\n                  <option value={3}>Three</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item sm={4}></Grid>\n            <Grid item sm={4}></Grid>\n\n            <Grid item sm={1}>\n              <Chip label=\"Employee\"></Chip>\n            </Grid>\n            <Grid item sm={11}>\n              <FormControlLabel\n                control={<Checkbox name=\"Read\" color=\"primary\" />}\n                label=\"Read\"\n              />\n              <FormControlLabel\n                control={<Checkbox name=\"Write\" color=\"primary\" />}\n                label=\"Write\"\n              />\n              <FormControlLabel\n                control={<Checkbox name=\"Hide\" color=\"primary\" />}\n                label=\"Hide\"\n              />\n            </Grid>\n\n            <Grid item sm={1}>\n              <Chip label=\"Manager\"></Chip>\n            </Grid>\n            <Grid item sm={11}>\n              <FormControlLabel\n                control={<Checkbox name=\"Read\" color=\"primary\" />}\n                label=\"Read\"\n              />\n              <FormControlLabel\n                control={<Checkbox name=\"Write\" color=\"primary\" />}\n                label=\"Write\"\n              />\n              <FormControlLabel\n                control={<Checkbox name=\"Hide\" color=\"primary\" />}\n                label=\"Hide\"\n              />\n            </Grid>\n\n            <Grid item sm={1}>\n              <Chip label=\"Admin\"></Chip>\n            </Grid>\n            <Grid item sm={11}>\n              <FormControlLabel\n                control={<Checkbox name=\"Read\" color=\"primary\" />}\n                label=\"Read\"\n              />\n              <FormControlLabel\n                control={<Checkbox name=\"Write\" color=\"primary\" />}\n                label=\"Write\"\n              />\n              <FormControlLabel\n                control={<Checkbox name=\"Hide\" color=\"primary\" />}\n                label=\"Hide\"\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default FieldContainer;\n","import React from \"react\";\nimport { Box, Button, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  buttonContainer: {\n    \"& button\": {\n      background: \"#0071E3\",\n      borderRadius: \"18px\",\n      marginRight: \"16px\",\n    },\n  },\n}));\n\nconst ButtonContainer = () => {\n  const classes = useStyles();\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      flexDirection=\"row\"\n      className={classes.buttonContainer}\n      m={2}\n    >\n      <Box>\n        <Button size=\"small\" variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </Box>\n      <Box>\n        <Button size=\"small\" variant=\"contained\" color=\"primary\">\n          Save As\n        </Button>\n      </Box>\n      <Box>\n        <Button size=\"small\" variant=\"contained\" color=\"primary\">\n          Cancel\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ButtonContainer;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Drawer, makeStyles, CssBaseline } from \"@material-ui/core\";\nimport NavBar from \"./pages/NavBar\";\nimport HomePage from \"./pages/HomePage\";\nimport FieldContainer from \"./pages/FieldContainer\";\nimport ButtonContainer from \"./pages/ButtonContainer\";\n\nconst drawerWidth = \"25%\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <Router>\n        <div className={classes.root}>\n          <CssBaseline />\n          <Drawer\n            variant=\"permanent\"\n            className={classes.drawer}\n            classes={{ paper: classes.drawerPaper }}\n          >\n            <ButtonContainer />\n            <NavBar />\n          </Drawer>\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/goal-setting\" component={FieldContainer} />\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}