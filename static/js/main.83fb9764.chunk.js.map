{"version":3,"sources":["serviceWorker.js","pages/NavBar.js","pages/HomePage.js","pages/FieldContainer.js","pages/ButtonContainer.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","NavBar","useState","openCollapse","setOpenCollapse","MenuList","style","padding","name","path","component","exact","map","prop","key","to","textDecoration","color","fontFamily","MenuItem","background","borderBottom","ListItemText","primary","onClick","HomePage","Grid","direction","container","item","sm","paddingLeft","height","flexDirection","Paper","noValidate","autoComplete","spacing","TextField","label","display","id","type","InputLabelProps","shrink","TextareaAutosize","width","rowsMin","rowsMax","placeholder","FieldContainer","FormControlLabel","control","Checkbox","FormControl","InputLabel","htmlFor","Select","native","inputProps","aria-label","value","paddingTop","Chip","justifyContent","useStyles","makeStyles","theme","buttonContainer","borderRadius","marginRight","textTransform","ButtonContainer","classes","Box","alignItems","className","m","Button","size","variant","root","backgroundColor","drawer","flexShrink","drawerPaper","content","flexGrow","GlobalCss","withStyles","margin","textArea","App","Drawer","paper","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.83fb9764.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { MenuList, MenuItem, ListItemText } from \"@material-ui/core\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst NavBar = () => {\n  const menuItems = [\n    {\n      name: \"General Settings\",\n      path: \"/\",\n      component: \"HomePage\",\n      exact: true,\n    },\n    {\n      name: \"Edit Fields\",\n      path: \"/goal-setting\",\n      component: \"FieldContainer\",\n      exact: false,\n    },\n  ];\n\n  const [openCollapse, setOpenCollapse] = useState(false);\n\n  return (\n    <>\n      <MenuList style={{ padding: 0 }}>\n        {menuItems.map((prop, key) => {\n          return (\n            <NavLink\n              to={prop.path}\n              key={key}\n              style={{\n                textDecoration: \"none\",\n                color: \"white\",\n                fontFamily: `'Open Sans', sans-serif `,\n              }}\n            >\n              <MenuItem\n                style={{\n                  background: \"rgba(0,0,0,0.8)\",\n                  borderBottom: \"1px solid white\",\n                }}\n              >\n                <ListItemText\n                  primary={prop.name}\n                  onClick={() => setOpenCollapse(!openCollapse)}\n                />\n                {openCollapse ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n              </MenuItem>\n            </NavLink>\n          );\n        })}\n      </MenuList>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Grid, TextField, TextareaAutosize, Paper } from \"@material-ui/core\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <Grid direction=\"row\" container>\n        <Grid\n          item\n          sm={12}\n          style={{\n            paddingLeft: \"24px\",\n            height: \"40px\",\n            fontFamily: `'Open Sans', sans-serif`,\n          }}\n        >\n          <h2>Goal Settings</h2>\n        </Grid>\n        <Grid item sm={12}>\n          <div\n            style={{\n              flexDirection: \"column\",\n              padding: \"24px\",\n              height: \"100vh\",\n            }}\n          >\n            <Paper style={{ padding: \"24px\" }}>\n              <form noValidate autoComplete=\"off\">\n                <Grid container direction=\"row\" spacing={3}>\n                  <Grid item sm={4} />\n                  <Grid item sm={4}>\n                    <TextField\n                      label=\"Name\"\n                      style={{ display: \"flex\" }}\n                    ></TextField>\n                  </Grid>\n                  <Grid item sm={4} />\n\n                  <Grid item sm={4} />\n                  <Grid item sm={4}>\n                    <TextField\n                      label=\"Start Date\"\n                      style={{ display: \"flex\" }}\n                      id=\"start-date\"\n                      type=\"date\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    ></TextField>\n                  </Grid>\n                  <Grid item sm={4} />\n\n                  <Grid item sm={4} />\n                  <Grid item sm={4}>\n                    <TextField\n                      label=\"End Date\"\n                      style={{ display: \"flex\" }}\n                      id=\"end-date\"\n                      type=\"date\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    ></TextField>\n                  </Grid>\n                  <Grid item sm={4} />\n\n                  <Grid item sm={4} />\n                  <Grid item sm={4}>\n                    <TextareaAutosize\n                      style={{ width: \"100%\" }}\n                      rowsMin={15}\n                      rowsMax={15}\n                      placeholder=\"Instructions\"\n                    />\n                  </Grid>\n                  <Grid item sm={4} />\n                </Grid>\n              </form>\n            </Paper>\n          </div>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport {\n  Grid,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  FormControl,\n  InputLabel,\n  Select,\n  Chip,\n  Paper,\n} from \"@material-ui/core\";\n\nconst FieldContainer = () => {\n  return (\n    <>\n      <Grid direction=\"row\" container>\n        <Grid\n          item\n          sm={12}\n          style={{\n            paddingLeft: \"24px\",\n            height: \"40px\",\n            fontFamily: `'Open Sans', sans-serif`,\n          }}\n        >\n          <h2>Field Container</h2>\n        </Grid>\n        <Grid item sm={12}>\n          <div\n            style={{\n              flexDirection: \"column\",\n              padding: \"24px\",\n              height: \"100vh\",\n            }}\n          >\n            <Paper style={{ padding: \"24px\" }}>\n              <form noValidate autoComplete=\"off\">\n                <Grid container direction=\"row\" spacing={3}>\n                  <Grid item sm={4}></Grid>\n                  <Grid item sm={4}>\n                    <TextField\n                      label=\"Label\"\n                      style={{ display: \"flex\" }}\n                    ></TextField>\n                  </Grid>\n                  <Grid item sm={4}></Grid>\n\n                  <Grid item sm={4}></Grid>\n                  <Grid item sm={4}>\n                    <TextField\n                      label=\"Field Id\"\n                      style={{ display: \"flex\" }}\n                    ></TextField>\n                  </Grid>\n                  <Grid item sm={4}></Grid>\n\n                  <Grid item sm={4}></Grid>\n                  <Grid item sm={4}>\n                    <FormControlLabel\n                      control={<Checkbox name=\"required\" color=\"primary\" />}\n                      label=\"Required Field\"\n                      style={{ display: \"flex\" }}\n                    />\n                  </Grid>\n                  <Grid item sm={4}></Grid>\n\n                  <Grid item sm={4}></Grid>\n                  <Grid item sm={4}>\n                    <FormControl style={{ display: \"flex\" }}>\n                      <InputLabel htmlFor=\"field-type\">Field Type</InputLabel>\n                      <Select\n                        native\n                        inputProps={{ name: \"field\", id: \"field-type\" }}\n                      >\n                        <option aria-label=\"None\" value=\"\" />\n                        <option value={1}>One</option>\n                        <option value={2}>Two</option>\n                        <option value={3}>Three</option>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item sm={4}></Grid>\n\n                  <Grid item sm={4}></Grid>\n                  <Grid item sm={4}>\n                    <Grid container direction=\"row\">\n                      <Grid item sm={2} style={{ paddingTop: \"5px\" }}>\n                        <Chip label=\"Employee\"></Chip>\n                      </Grid>\n                      <Grid\n                        item\n                        sm={10}\n                        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                      >\n                        <FormControlLabel\n                          control={<Checkbox name=\"Read\" color=\"primary\" />}\n                          label=\"Read\"\n                        />\n                        <FormControlLabel\n                          control={<Checkbox name=\"Write\" color=\"primary\" />}\n                          label=\"Write\"\n                        />\n                        <FormControlLabel\n                          control={<Checkbox name=\"Hide\" color=\"primary\" />}\n                          label=\"Hide\"\n                        />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item sm={4}></Grid>\n\n                  <Grid item sm={4}></Grid>\n                  <Grid item sm={4}>\n                    <Grid container direction=\"row\">\n                      <Grid item sm={2} style={{ paddingTop: \"5px\" }}>\n                        <Chip label=\"Manager\"></Chip>\n                      </Grid>\n                      <Grid\n                        item\n                        sm={10}\n                        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                      >\n                        <FormControlLabel\n                          control={<Checkbox name=\"Read\" color=\"primary\" />}\n                          label=\"Read\"\n                        />\n                        <FormControlLabel\n                          control={<Checkbox name=\"Write\" color=\"primary\" />}\n                          label=\"Write\"\n                        />\n                        <FormControlLabel\n                          control={<Checkbox name=\"Hide\" color=\"primary\" />}\n                          label=\"Hide\"\n                        />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item sm={4}></Grid>\n\n                  <Grid item sm={4}></Grid>\n                  <Grid item sm={4}>\n                    <Grid container direction=\"row\">\n                      <Grid item sm={2} style={{ paddingTop: \"5px\" }}>\n                        <Chip label=\"Manager\"></Chip>\n                      </Grid>\n                      <Grid\n                        item\n                        sm={10}\n                        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                      >\n                        <FormControlLabel\n                          control={<Checkbox name=\"Read\" color=\"primary\" />}\n                          label=\"Read\"\n                        />\n                        <FormControlLabel\n                          control={<Checkbox name=\"Write\" color=\"primary\" />}\n                          label=\"Write\"\n                        />\n                        <FormControlLabel\n                          control={<Checkbox name=\"Hide\" color=\"primary\" />}\n                          label=\"Hide\"\n                        />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item sm={4}></Grid>\n                </Grid>\n              </form>\n            </Paper>\n          </div>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default FieldContainer;\n","import React from \"react\";\nimport { Box, Button, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  buttonContainer: {\n    \"& button\": {\n      background: \"#0071E3\",\n      borderRadius: \"18px\",\n      marginRight: \"16px\",\n      textTransform: \"none\",\n      fontFamily: `'Open Sans', sans-serif`,\n    },\n  },\n}));\n\nconst ButtonContainer = () => {\n  const classes = useStyles();\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      flexDirection=\"row\"\n      className={classes.buttonContainer}\n      m={2}\n    >\n      <Box>\n        <Button size=\"small\" variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </Box>\n      <Box>\n        <Button size=\"small\" variant=\"contained\" color=\"primary\">\n          Save As\n        </Button>\n      </Box>\n      <Box>\n        <Button size=\"small\" variant=\"contained\" color=\"primary\">\n          Cancel\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ButtonContainer;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Drawer, makeStyles, withStyles } from \"@material-ui/core\";\nimport NavBar from \"./pages/NavBar\";\nimport HomePage from \"./pages/HomePage\";\nimport FieldContainer from \"./pages/FieldContainer\";\nimport ButtonContainer from \"./pages/ButtonContainer\";\n\nconst drawerWidth = \"25%\";\n//const backGroundColor = \"#FDFFFC\";\nconst backGroundColor = \"#EEF0F2\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    backgroundColor: backGroundColor,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    background: \"red\",\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: backGroundColor,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst GlobalCss = withStyles({\n  \"@global\": {\n    \".MuiExpansionPanel-root.Mui-expanded\": {\n      margin: 0,\n    },\n    \".MuiFormLabel-root, .MuiInputBase-root, .MuiTypography-root, .MuiChip-label\": {\n      fontFamily: `'Open Sans', sans-serif`,\n    },\n    textArea: {\n      fontFamily: `'Open Sans', sans-serif`,\n    },\n  },\n})(() => null);\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <Router>\n        <div className={classes.root}>\n          <GlobalCss />\n          <Drawer\n            variant=\"permanent\"\n            className={classes.drawer}\n            classes={{ paper: classes.drawerPaper }}\n          >\n            <ButtonContainer />\n            <NavBar />\n          </Drawer>\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/goal-setting\" component={FieldContainer} />\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}